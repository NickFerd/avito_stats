openapi: 3.1.0

info:
  title: Avito Stats API
  description: API that allows to track amount of ads by search query and location
  version: 1.0.0

servers:
  - url: http://localhost
    description: local server for development

paths:
  /add:
    post:
      summary: adds pair of query and location_id to tracking schedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddScheme'
      responses:
        '200':
          description: Returns id of created pair
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPairSchema
        
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /stop/{pair_id}:
    parameters:
      - in: path
        name: pair_id
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Stop tracking pair
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
        '404':
          $ref: '#/components/responses/NotFound'

  /stat:
    post:
      summary: Endpoint for getting number of ads between specified datetime_from, datetime_to (all in UTC)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatsSchemaRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsSchemaResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /top:
    post:
      summary: Endpoint similar to /stat but returns top 5 ads for every hour between specified datetime_from and datetime_to (all UTC).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatsSchemeRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopAdsResponse'

        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  

components:
  responses:
    NotFound:
      description: The specified pair_id was not found.
      content:
        application/json:
          schema:
            $ref: '#/schemas/Error'

  schemas:
    Error:
      type: object
      properties:
        detail:
          type: string
      required:
        - error
      additionalProperties: true

    StatItem:
      type: object
      properties:
        moment:
          type: string
          format: date-time
        count:
          type: integer

    AdItem:
      type: object
      required:
        - ad_id
        - url
        - title
        - price
      properties:
        ad_id:
          type: integer
        url:
          type: string
        title:
          type: string
        price:
          type: integer
          
    AdsCollection:
        type: object
        required:
          - moment
          - ads
        properties:
          moment:
            type: string
            format: date-time
          ads:
            type: array
            items:
                $ref: '#/components/schemas/AdItem'

    AddScheme:
      type: object
      required:
        - query
        - location
      properties:
        query:
          type: string
        location:
          type: string
        check_every_minute:
          type: int
          default: 60
 
    GetPairSchema:
        allOf:     # Combines the AddScheme and 
            - $ref: '#/components/schemas/AddScheme'
            - type: object
              required:
                - id
              properties:
                id:
                  type: string
                  format: uuid
    
    StatsSchemaRequest:
      type: object
      required:
        - id
        - datetime_from
        - datetime_to
      properties:
        id:
          type: string
          format: uuid
        datetime_from:
          type: string
          format: date-time
        datetime_to:
          type: string
          format: date-time

    StatsSchemaResponse:
        allOf:
          - $ref: '#/components/schemas/StatsSchemaRequest'
          - type: object
            required:
              - stats
            properties:
              stats:
                type: array
                items:
                  $ref: '#/components/schemas/StatItem'

    TopAdsResponse:
        allOf:
            - $ref: '#/components/schemas/StatsSchemaRequest'
            - type: object
              required:
                - top_ads
              properties:
                top_ads:
                  type: array
                  items:
                    $ref: '#/components/schemas/AdsCollection'
             
    
         
         



